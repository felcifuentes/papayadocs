"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chalk = require("chalk");
var util = require("util");
var IGlimpseError_1 = require("./IGlimpseError");
var ErrorCodes_1 = require("./ErrorCodes");
function chalkBySeverity(severity, message) {
    switch (severity) {
        case IGlimpseError_1.GlimpseErrorSeverity.Error:
            return chalk.red(message);
        case IGlimpseError_1.GlimpseErrorSeverity.Warning:
            return chalk.yellow(message);
        default:
            return message;
    }
}
var LoggingErrorReportingService = (function () {
    function LoggingErrorReportingService() {
    }
    LoggingErrorReportingService.prototype.reportError = function (error) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        var header = chalkBySeverity(error.severity, "Glimpse: " + IGlimpseError_1.GlimpseErrorSeverity[error.severity].toLocaleUpperCase() + " (" + ErrorCodes_1.getSlugForErrorCode(error.errorCode) + "):");
        var message = util.format.apply(util, [error.message].concat(params));
        // NOTE: VS Code will not recognize chalk-ed URLs, so we don't use it for our error links.
        var url = error.url ? " (See " + error.url + ")" : '';
        console.error(header + " " + message + url);
    };
    return LoggingErrorReportingService;
}());
exports.LoggingErrorReportingService = LoggingErrorReportingService;

//# sourceMappingURL=../../../maps/src/errors/LoggingErrorReportingService.js.map
