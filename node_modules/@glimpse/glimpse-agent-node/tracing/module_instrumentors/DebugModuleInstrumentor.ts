import DebugProxy from './DebugProxy';
import { IAgent } from '../../IAgent';
import { IEnableInstrumentationResult } from '../IEnableInstrumentationResult';
import { IModuleInstrumentor } from '../IModuleInstrumentor';
import { IModuleInfo } from '../IModuleInfo';

/**
 * The module instrumentor for the [`debug`](https://www.npmjs.com/package/debug) package.
 */
export class DebugModuleInstrumentor implements IModuleInstrumentor {
    private agent: IAgent;

    public get supportedModules(): { [ moduleName: string ]: string; } {
        return {
            'debug': '>=2.0 <2.7'
        };
    }

    public setAgent(agent: IAgent) {
        this.agent = agent;
    }

    public enableInstrumentation(moduleInfo: IModuleInfo): IEnableInstrumentationResult {

        const debugProxy = new DebugProxy(
            this.agent.broker,
            this.agent.providers.consoleManager,
            this.agent.providers.contextManager,
            this.agent.providers.messageConverter,
            this.agent.providers.stackHelper);

        const newModule = debugProxy.proxyModule(moduleInfo.originalModule, moduleInfo.version);

        // Right now we don't do any in-depth checking to see if the module couldn't
        // be enabled for some reason, so we hard return true here
        return {
            isEnabled: true,
            newModule
        };
    }
}

export default DebugModuleInstrumentor;
