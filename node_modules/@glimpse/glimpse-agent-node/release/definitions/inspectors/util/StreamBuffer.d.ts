/// <reference types="node" />
/**
 * A component for buffering content written to a stream.
 */
export declare class StreamBuffer {
    private _encoding;
    private buffer;
    /**
     * Gets the encoding specified during the last `write()` of a string.
     *
     * @return An encoding (e.g. `utf-8`) or `undefined`.
     */
    readonly encoding: string | undefined;
    /**
     * Writes content to the buffer.
     *
     * @param chunk The content to write.
     * @param encoding If the content is a string, its intended encoding or `undefined` to use the default.
     */
    write(chunk: string | Buffer, encoding: string | undefined): void;
    /**
     * Returns the stringified contents of the buffer.
     *
     * @return A string representing the contents of the buffer.
     */
    toString(): string;
}
export default StreamBuffer;
