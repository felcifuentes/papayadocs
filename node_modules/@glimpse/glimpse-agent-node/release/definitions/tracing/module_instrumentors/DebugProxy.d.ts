import { IAgentBroker } from '../../messaging/IAgentBroker';
import IConsoleManager from '../../configuration/IConsoleManager';
import { IContextManager } from '../../messaging/IContextManager';
import { IMessageConverter } from '../../messaging/IMessageConverter';
import { IStackHelper } from '../../inspectors/util/StackHelper';
export interface IFunctionModule {
    (...args: any[]): any;
}
/**
 * A proxy for the [`debug`](https://www.npmjs.com/package/debug) package.
 */
export declare class DebugProxy {
    private broker;
    private consoleManager;
    private contextManager;
    private messageConverter;
    private stackHelper;
    constructor(broker: IAgentBroker, consoleManager: IConsoleManager, contextManager: IContextManager, messageConverter: IMessageConverter, stackHelper: IStackHelper);
    /**
     * Proxies an instance of the `debug` module.
     *
     * @param originalModule The original `debug` module to proxy.
     * @param version The version of the module to proxy.
     * @return A proxied module.
     */
    proxyModule<T extends IFunctionModule>(originalModule: T, version: string): T;
    private proxyObject(newObject, originalObject, additionalProperties?);
    private proxyProperty(newObject, originalObject, property);
    private publish(name, module, version, stackTopFunction, messageArgs);
    private applyCustomFormatters(formatters, messageArgs, debugFunction, version);
    private replaceAt(originalString, index, character);
}
export default DebugProxy;
